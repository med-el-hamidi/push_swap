#!/bin/bash

# Function to generate all permutations of the input array
permute() {
  local items=("$@")
  local len=${#items[@]}
  if [ $len -le 1 ]; then
    echo "${items[*]}"
  else
    for ((i=0; i<len; i++)); do
      local first="${items[$i]}"
      local rest=("${items[@]:0:i}" "${items[@]:i+1}")
      permute "${rest[@]}" | while read -r subperm; do
        echo "$first $subperm"
      done
    done
  fi
}

# Generate all permutations of the numbers 0 1 2 3 4
permutations=$(permute 0 1 2 3 4 5)

# Loop through each permutation and execute ./push_swap
echo "$permutations" | while read -r perm; do
  # Execute push_swap and checker_linux, and store the result
  res=$(./push_swap $perm | ./checker_linux $perm)
  # Check if the result is "KO"
  if [[ "$res" == "KO" ]]; then
    echo "KO: $perm"
  fi
done
echo "Done."
